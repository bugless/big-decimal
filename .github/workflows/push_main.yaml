on:
  push:
    branches:
      - main

name: CI

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: 2.13.4
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        if: always() && steps.install.outcome == 'success'
        run: dart format --line-length 120 --set-exit-if-changed .
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: 2.13.4
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Test
        if: always() && steps.install.outcome == 'success'
        run: pub run test
  create-tag-and-release:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - id: check_version_and_changelog
        name: Check if version on pubspec.yaml was changed and if there's an entry for this new version on CHANGELOG
        uses: comigor/actions/check-version-and-changelog@master
        with:
          base_ref: ${{ github.ref }}
        continue-on-error: true
      - name: Push tag
        uses: anothrNick/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: v${{ steps.check_version_and_changelog.outputs.package_version }}
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check_version_and_changelog.outputs.package_version }}
          release_name: Release v${{ steps.check_version_and_changelog.outputs.package_version }}
  deploy:
    needs: create-tag-and-release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Check PR labels action step
        id: check_pr_labels
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release"]'
      - name: Publish to pub.dev
        if: steps.check_pr_labels.outputs.result == 'true'
        uses: comigor/actions/pub-publish@master
        env:
          PUB_CREDENTIALS: ${{ secrets.PUB_CREDENTIALS }}
        with:
          pub_credentials: ${{ secrets.PUB_CREDENTIALS }}
